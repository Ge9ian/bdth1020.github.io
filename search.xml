<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>测信道攻击</title>
      <link href="/2022/03/22/article-title/"/>
      <url>/2022/03/22/article-title/</url>
      
        <content type="html"><![CDATA[<p>Welcome to<br>搁浅</p><h2 id="定时攻击"><a href="#定时攻击" class="headerlink" title="定时攻击"></a>定时攻击</h2><p>在定时攻击中，攻击者试图通过分析执行密码算法所花费的时间来破坏密码系统。因为计算机中的每个逻辑操作都需要时间来执行，并且时间可能因输入而异，所以通过精确测量每个操作的时间，攻击者可以回溯到输入。通过时间信息发现秘密可能比使用已知明文、密文对的密码分析要容易得多。有时，时序信息与密码分析相结合，以增加信息泄漏率。</p><p>例如模幂运算中使用的平方和乘法算法的执行时间线性地取决于密钥中“1”位的数量。虽然“1”位的数量不足以使找到密钥变得容易，但使用相同的密钥和不同的输入重复执行可用于执行时序信息的统计相关性分析以完全恢复密钥，即使通过被动攻击者。</p><p>但是需要注意到的是，观察到的时序测量通常包括噪声（来自诸如网络延迟、访问与访问之间的磁盘驱动器访问差异以及用于从传输错误中恢复的纠错技术等来源）。</p><p>当然，定时攻击对许多加密算法是实用的，包括 RSA、ElGamal 和数字签名算法。</p><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><p> 此时 有一个不安全的密码验证函数</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ bool insecureStringCompare(const char* a, const char* b, size_t length)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span> (size_t i = 0; i &lt; length; i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span> (a[i] != b[i])</span><br><span class="line">{</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$ import pwn</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">def run(arg:str):</span><br><span class="line">    io = pwn.process(<span class="string">"/home/feng02/桌面/pin_checker.py"</span>) <span class="comment">#本地运行一个程序</span></span><br><span class="line">    <span class="built_in">print</span>(io.recv())    <span class="comment">#接收所有数据</span></span><br><span class="line">    start = time.time()</span><br><span class="line">    io.sendline(arg.encode()) <span class="comment">#发送arg数据并以bytes输出 且包含换行符</span></span><br><span class="line">    io.recvall()  <span class="comment">#接收所有数据，直到socket关闭</span></span><br><span class="line">    end = time.time()</span><br><span class="line">    io.close()</span><br><span class="line">    <span class="built_in">return</span> end - start</span><br><span class="line"></span><br><span class="line">result = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(8):</span><br><span class="line">    t = []</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(10):</span><br><span class="line">        ret = run(result + str(j) + <span class="string">"0"</span> * (7 - i))</span><br><span class="line">        t.append(ret)</span><br><span class="line">    result += str(t.index(max(t)))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(f<span class="string">"PIN: {result}"</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="类别"><a href="#类别" class="headerlink" title="类别"></a>类别</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ 侧信道攻击一般类别包括：</span><br><span class="line"></span><br><span class="line">缓存攻击 → 攻击基于攻击者监控受害者在共享物理系统（如在虚拟化环境或某种云服务中）进行的缓存访问的能力。</span><br><span class="line">定时攻击 → 基于测量各种计算（例如，将攻击者的给定密码与受害者的未知密码进行比较）执行的时间的攻击。</span><br><span class="line">电源监控攻击 → 在计算过程中利用硬件不同功耗的攻击。</span><br><span class="line">电磁攻击 → 基于泄露的电磁辐射的攻击，可以直接提供明文等信息。此类测量可用于使用与功率分析中的技术等效的技术来推断密码密钥，或者可用于非密码攻击。</span><br><span class="line">声学密码分析 → 利用计算过程中产生的声音的攻击（类似于功率分析）。</span><br><span class="line">差分故障分析 → 通过在计算中引入故障来发现秘密。</span><br><span class="line">数据残留 → 敏感数据在被删除后被读取。</span><br><span class="line">软件发起的故障攻击 → 目前是一种罕见的侧通道，Row_hammer是一个示例</span><br><span class="line">光学 → 可以使用高分辨率相机或其他具有此类功能的设备，通过视觉记录来读取机密和敏感数据。</span><br></pre></td></tr></tbody></table></figure><h3 id="出处"><a href="#出处" class="headerlink" title="出处"></a>出处</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ https://hasegawaazusa.github.io/</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/03/21/hello-world/"/>
      <url>/2022/03/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
